========= & ===========

El operador & hace que el proceso padre no espere por que el proceso hijo termine y lo mantiene ejecutándose en segundo plano.
-------------------------------
cmsh@fulano:/home$ wget link &
-------------------------------
Este comando descarga lo que halla en el link, pero en vez de esperar a que termine la descarga desbloquear la shell, lo que hace es mantener la descarga en segundo plano y así poder hacer otras cosas mientras la descarga continua.

Implementación: Cuando se crea un fork() para ejecutar el proceso como hijo siempre en el padre se espera mediante la función waitpid(pid, stautus, flag) que el comando hijo termine para seguir con el comando padre.
Entonces, para dejar el proceso en el background no se usa este waitpid, manteniendo la ejecución del comando en paralelo mientras continua el proceso padre.
También se guarda el pid del comando en una lista para acceder a todos los procesos en el background más adelante.

Nota: A mi background se manda toooda la cadena de comandos y falla si hay algún operador & en el medio de la cadena.

Ejemplo:
--------------------
cmsh@fulano:/home$ command1 & || command2      # este comando falla
cmsh@fulano:/home$ command1 || command2 &      # este comando pasa toda la entrada al background, no solo command2
--------------------


======= jobs ==========

El comando jobs muestra una lista de todos los procesos que se estan corriendo en el background con su correspondiente pid.

-----------------------------
cmsh@fulano:/home$ jobs
# lista de los comandos
[1] comando1 <pid>
[2] comando2 <pid>
# prompt
cmsh@fulano:/home$
---------------------------


======= fg =============

El comando fg <pid> envía hacia el foreground el proceso <pid>, si se ejecuta fg sin parámetros entonces envía hacia el foreground el último proceso que fue al background.
Implementación: Para esto simplenente tomamos su pid y mediante la función waitpid esperamos a que el proceso termine(Esto bloquea la shell nuevamente hasta que el proceso termina). 


NOTA: Aquí me confundí y en vez de usar el pid como argumento del comando, lo que uso es el índice del mismo en la lista de los procesos.